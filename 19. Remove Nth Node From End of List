Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:
Given n will always be valid.
Try to do this in one pass.


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode firstNode = new ListNode(0);
        firstNode.next = head;
        ListNode secondNode = new ListNode(0);
        secondNode.next = head;
        int i =0;
        while(firstNode.next.next!=null){
            firstNode.next = firstNode.next.next;
            i++;
            if(i>n) secondNode.next = secondNode.next.next;
        }
        
        if(secondNode.next.next == null) return null;
        if(i < n) return secondNode.next.next;
        secondNode.next.next = secondNode.next.next.next;
        
        return head;
    }
}