Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1 == null&&l2!=null) return l2;
        if(l2 == null&&l1!=null) return l1;
        if(l1 ==null&&l2 ==null) return null;
        ListNode firstNode = new ListNode(0);
        firstNode.next = l1;
        ListNode secondNode = new ListNode(0);
        secondNode.next = l2;
        ListNode resultList = new ListNode(0);
        ListNode lastNode = new ListNode(0);
        
        while(firstNode.next!=null && secondNode.next!=null){
            ListNode newNode = new ListNode(0);
            if(firstNode.next.val < secondNode.next.val){
                newNode.val = firstNode.next.val;
                firstNode.next = firstNode.next.next;
            }else{
                newNode.val = secondNode.next.val;
                secondNode.next = secondNode.next.next;
            }
            
            if(resultList.next == null){
                resultList.next = newNode;
            }else{
               lastNode.next.next = newNode;
            }
            lastNode.next = newNode;
        }
        if(firstNode.next == null&&secondNode.next!=null) lastNode.next.next = secondNode.next;
        if(secondNode.next == null&&firstNode.next!=null) lastNode.next.next = firstNode.next;
        
        return resultList.next;
    }
}