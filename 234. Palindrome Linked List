Given a singly linked list, determine if it is a palindrome.

Follow up:
Could you do it in O(n) time and O(1) space?


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode fast  = head;
        ListNode slow = head;
        Stack<ListNode> stack = new Stack<ListNode>();
        while(fast != null&&fast.next!=null){
            stack.push(slow);
            fast = fast.next.next;
            slow = slow.next;
        }
        if(fast!=null){
            slow = slow.next;
        }
        
        while(!stack.empty()){
            if(stack.pop().val!=slow.val) return false;
            slow = slow.next;
        }
        return true;
    }
}