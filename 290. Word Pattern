Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Examples:
1.pattern = "abba", str = "dog cat cat dog" should return true.
2.pattern = "abba", str = "dog cat cat fish" should return false.
3.pattern = "aaaa", str = "dog cat cat dog" should return false.
4.pattern = "abba", str = "dog dog dog dog" should return false.
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.


public class Solution {
    public boolean wordPattern(String pattern, String str) {
        String[] array = new String[256];
        String[] strArray = str.split(" ");
        if(strArray.length!=pattern.length()) return false;
        HashMap<String,Integer> map = new HashMap<String,Integer>();
        for(int i = 0;i<strArray.length;i++){
            char c = pattern.charAt(i);
            String s = strArray[i];
            if(array[c+0] == null){
               array[c+0] = s; 
            }else if(!array[c+0].equals(s)){
                return false;
            }
            if(map.containsKey(s)){
                if(map.get(s)!= c+0) return false;
            }else{
                map.put(s,c+0);
            }
        }
        
        return true;
    }
}