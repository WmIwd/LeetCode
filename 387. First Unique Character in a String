
Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.


public class Solution {
    public int firstUniqChar(String s) {
        if(s.length() == 0) return -1;
        Set<Character> set = new HashSet<Character>();
        HashMap<Character,Integer> map = new HashMap<Character,Integer>();
        for(int i  = s.length()-1;i>=0;i--){
        	if(set.add(s.charAt(i))){
        	   map.put(s.charAt(i),i);
        	}else{
        	   map.remove(s.charAt(i));
        	}
        }
        int min = s.length();
        for(Map.Entry<Character, Integer> entry:map.entrySet()){    
            if(entry.getValue()<min) min = entry.getValue();  
        }   
        if(min!=s.length()) return min;
        return -1;
    }
}