Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:
You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively.

给定两个排序的数组，将两个数组进行合并，合并后也是有序的，合并结果存放在nums1中。nums1中有足够的空间容纳nums2。 


public class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        if(n == 0) return;
        if(m == 0) {
            for(int i=0;i<n;i++){
                nums1[i] = nums2[i];
            }
            return;
        }
        int[] resultArr = new int[m+n];
    	int k = 0;
    	int i = 0;
    	int j = 0;
    	while(i<m&&j<n){
    		if(nums1[i] < nums2[j]){
    			resultArr[k] = nums1[i];
    			k++;
    			i++;
    		}else if(nums1[i] > nums2[j]){
    			resultArr[k] = nums2[j];
    			k++;
    			j++;
    		}else{
    			resultArr[k] = nums1[i];
    			k++;
    			i++;

    			resultArr[k] = nums2[j];
    			k++;
    			j++;
    		}
    	}
    	
    	if(i<m){
    		for(int y = i;y<m;y++){
    			resultArr[k] = nums1[y];
    			k++;
    		}
 	   	}else if(j<n){
			for(int y = j;y<n;y++){
    			resultArr[k] = nums2[y];
    			k++;
    		}
 	   	}

    	for(int x = 0;x<k;x++){
    		nums1[x] = resultArr[x];
    	}
    }
}